[{"content":"译文 #我在一家乡村小酒店吃过午饭后，就找我的提包。\n我曾把它放在门边的椅子上，可这会儿不见了！ 当我正在寻找时，酒店老板走了进来。\n“您吃得好吗？”他问。\n“很好，谢谢。”\n我回答，“但我付不了帐，我的提包没有了。”\n酒店老板笑了笑，马上走了出去。 一会儿工夫他拿着我的提包回来了，把它还给了我。\n“实在抱歉，”他说，“我的狗把它弄到花园里去了，他常干这种事！”\n原文 #After I had had lunch at a village pub, I looked for my bag.\nI had left it on a chair beside the door and now it wasn\u0026rsquo;t there.\nAs I was looking for it, the landlord came in.\n\u0026ldquo;Did you have a good meal?\u0026rdquo; he asked.\n\u0026ldquo;Yes, thank you.\u0026rdquo; I answered, \u0026ldquo;But I can\u0026rsquo;t pay the bill. I haven\u0026rsquo;t got my bag.\u0026rdquo;\nThe landlord smiled and immediately went out.\nIn a few minutes he returned with my bag and gave it back to me.\n\u0026ldquo;I\u0026rsquo;m very sorry,\u0026rdquo; he said, \u0026ldquo;My dog had taken it into the garden. He often does this.\u0026rdquo;\n重点记忆\nlandlord: 店主\nIn a few minutes: 不一会儿\nIn a few minutes he returned with my bag and gave it back to me.\n","date":"2025年9月5日","permalink":"https://yyym2017.github.io/english/the-new-concept-english/book2/lesson18/","section":"英语学习","summary":"","title":"He often does this!"},{"content":"","date":null,"permalink":"https://yyym2017.github.io/tags/%E6%96%B0%E6%A6%82%E5%BF%B5/","section":"标签分类","summary":"","title":"新概念"},{"content":"","date":null,"permalink":"https://yyym2017.github.io/tags/%E8%8B%B1%E8%AF%AD/","section":"标签分类","summary":"","title":"英语"},{"content":" “这世上只有一种英雄主义，在认清了生活的真相后依然爱它！” Congo 主题文档\n","date":null,"permalink":"https://yyym2017.github.io/","section":"主页","summary":"","title":"主页"},{"content":"","date":null,"permalink":"https://yyym2017.github.io/tags/408/","section":"标签分类","summary":"","title":"408"},{"content":"","date":null,"permalink":"https://yyym2017.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%80%83%E7%A0%94/","section":"标签分类","summary":"","title":"计算机考研"},{"content":"","date":null,"permalink":"https://yyym2017.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/","section":"标签分类","summary":"","title":"数据结构"},{"content":"","date":null,"permalink":"https://yyym2017.github.io/tags/%E7%AE%97%E6%B3%95/","section":"标签分类","summary":"","title":"算法"},{"content":"视频课 # 算法的基本概念 重点摘要 #什么是算法：\n程序 = 数据结构 + 算法\n算法（Algorithm）是对特定问题求解步骤的一种描述，他是指令的有限序列，其中的每个指令表示一个或多个操作。\n有穷性：一个算法必须在有限步骤和时间内完成，对比程序来说程序可以常驻内存一直运行下去 确定性：算法中的每条指令必须有确切的含义，对于相同的输入只能得到相同的输出 可行性： 算法中描述的操作都可以通过已经实现的基本运算执行有限次来实现 输入：一个算法有零个或多个输入。这些输入取自某个特定的对象集合 输出：一个算法有一个或多个输出。这些输出是与输入有某种特定关系的量 一个好的算法要满足：\n正确性：算法应能够正确的求解问题 可读性：算法应具备良好的可读性，以帮助人们理解（有时候算法不单单只是给机器执行的，更多的是要人类维护） 健壮性：通俗说就是容错性，对错误输入的应对，以及边界情况的考量是否周到 高效率、低存储：运行所需时间尽量少，对应时间复杂度；所需内存尽量低，对应空间复杂度 这里给数据结构下的定义是： 如何用数据正确描述现实世界的问题，并存入计算机\n算法：如何高效地处理这些数据，以解决实际问题\n总结 # 算法的概念 参考 # 《hello 算法》中关于算法和数据结构的定义\n","date":"2025年9月5日","permalink":"https://yyym2017.github.io/408/data-structures-and-algorithms/wangdao/1.2.1_%E7%AE%97%E6%B3%95%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/","section":"计算机考研408专业","summary":"","title":"算法的基本概念"},{"content":" 视频课 # 算法的基本概念 重点摘要 #如何评估算法时间开销：\n测试运行，事后统计\n带来的问题: 机器性能相关 编程语言相关 编译程序产生的机器指令相关 无事后统计条件，例如导弹控制算法 根据问题的规模事前估计\n原理是统计算法中最小执行单元的数目，这将会是问题输入规模 \\(n\\) 的函数 \\(T(n)\\)\n大\\(O\\)表示法\n在以上推导出的 \\(T(n)\\) 函数的基础上，取最高阶的项，并忽略常系数作为算法的时间复杂度，记为 \\(O(n^m)\\)，\\(m\\geqq0\\)。\n课程的例子求得 \\(T(n)=3n+1\\)，取最高次项 \\(3n\\)，忽略系数为 \\(n\\)， 既得算法的时间复杂度为 \\(O(n)\\)。\n如果是常数阶，既不管输入规模如何变化，算法包含的最小执行单元不变，记为 \\(O(1)\\)。\n算法最小执行单元的统计 加法原则/乘法原则 加法原则/乘法原则 常见时间复杂度\n$$O(1)\u0026lt;O(logn)\u0026lt;O(n)\u0026lt;O(nlogn)\u0026lt;O(n^2)\u0026lt;O(2^n)\u0026lt;O(n!)$$ 总结 # 事后统计运行时间 常见时间复杂度 常见时间复杂度量级对比 重点回顾 参考 # 有兴趣的小伙伴可以参考《hello 算法》中关于算法效率的定义\n","date":"2025年9月5日","permalink":"https://yyym2017.github.io/408/data-structures-and-algorithms/wangdao/1.2.2_%E7%AE%97%E6%B3%95%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6/","section":"计算机考研408专业","summary":"","title":"算法的时间复杂度"},{"content":"译文 #我的姑姑詹妮弗是位演员，她至少也有35岁了。\n尽管如此，她却常在舞台上扮演小姑娘。\n詹妮弗很快又要参加一个新剧的演出。\n这一次，她将扮演一个17岁的少女。\n演出时她必须穿一条鲜红色的裙子和黑色的长筒袜。\n去年在演另一个剧时，她不得不穿短袜和一件鲜艳的橘红色的衣服。\n一旦有人问起她有多大年纪，她总是回答：“亲爱的，长成大人真可怕啊！”\n原文 #My aunt Jennifer is an actress.\nShe must be at least thirty-five years old.\nIn spite of this, she often appears on the stage as a young girl.\nJennifer will have to take part in a new play soon.\nThis time, she will be a girl of seventeen.\nIn the play, she must appear in a bright red dress and long black stockings.\nLast year in another play, she had to wear short socks and a bright, orange-coloured dress.\nIf anyone ever asks her how old she is, she always answers, \u0026lsquo;Darling, it must be terrible to be grown up!\u0026rsquo;\n重点记忆：\nIf anyone ever asks her how old she is\n一旦有人问起她的年纪\nto be grown up\n长大成人\n","date":"2025年9月4日","permalink":"https://yyym2017.github.io/english/the-new-concept-english/book2/lesson17/","section":"英语学习","summary":"","title":"Always young"},{"content":"","date":null,"permalink":"https://yyym2017.github.io/tags/english/","section":"标签分类","summary":"","title":"English"},{"content":"这个问题由新概念英语二册16课中的一个句子引出：You will enjoy your stay here's time if you pay attention to our street signs. 该解析由 AI 提供。\n简单来说，使用 \u0026ldquo;our street signs\u0026rdquo; 是正确的，而 \u0026ldquo;our street\u0026rsquo;s signs\u0026rdquo; 听起来不自然且通常是错误的，原因如下：\n1. 名词充当形容词（Noun Adjunct） #这是最核心的原因。在英语中，我们经常用一个名词（如 street）来修饰另一个名词（如 signs），以此来说明后一个名词的类型、类别或用途。\nstreet signs：这是一种标志的类别。它指的是“那些我们称之为‘街道标志’的东西”，即用于街道的交通指示牌、路牌等。这里的 street 描述的是 signs 的功能和类型。 computer science（计算机科学） chocolate cake（巧克力蛋糕） car door（车门） 在这些例子中，第一个名词都不是拥有者，而是描述者。\n2. 所有格 \u0026rsquo;s 表示“归属关系” #所有格 's 表示一种归属、拥有或关联关系。它会改变句子的意思。\nour street\u0026rsquo;s signs： 这意味着“我们这条街道所拥有的标志”。这听起来很别扭，因为它暗示着这条街道本身像一个拥有者一样“拥有”这些标志。人们可能会理解成“这条街的财产清单里包括一些标志”，而不是指交通路牌。 除非在非常特殊的语境下，比如你是在说一条特定的、拟人化的街道（例如在童话故事里），否则这种说法是不自然的。\n对比总结 # 表达 含义 自然度 street signs 一种标志的类型（路牌、交通标志） ✅ 非常自然和常用 the street\u0026rsquo;s signs 归属于某条特定街道的标志（听起来像街道拥有它们） ❌ 不自然，很少使用 一个很好的类比 #想想 \u0026ldquo;a dog leash\u0026quot;（狗绳）和 \u0026ldquo;a dog\u0026rsquo;s leash\u0026quot;（狗的绳子）。\nI need to buy a new dog leash. (我需要买一条新的狗绳。) 这里你在谈论一种产品类型。 That is my dog\u0026rsquo;s leash. (那是我狗的绳子。) 这里你在说明一个特定的物品归属于一只特定的狗。 在你的例子中，\u0026ldquo;our street signs\u0026rdquo; 更像是第一种情况，你在谈论一种通用的物品类型，而不是强调归属关系。\n结论 #所以，\u0026ldquo;our street signs\u0026rdquo; 是正确的，因为它将 street 作为名词形容词使用，来描述标志的种类。而 \u0026ldquo;our street\u0026rsquo;s signs\u0026rdquo; 使用了所有格，不必要地强调了归属关系，因此听起来很奇怪，在绝大多数情况下都是错误的。\n记住这个规则：当你用名词来描述另一个名词的类别或用途时，通常直接使用名词本身（如 street signs），而不是所有格形式。\n","date":"2025年9月3日","permalink":"https://yyym2017.github.io/english/syntax/n-as-adj/","section":"英语学习","summary":"","title":"名词充当形容词用法与所有格的区分"},{"content":"","date":null,"permalink":"https://yyym2017.github.io/tags/%E8%8B%B1%E8%AF%AD%E8%AF%AD%E6%B3%95/","section":"标签分类","summary":"","title":"英语语法"},{"content":"","date":null,"permalink":"https://yyym2017.github.io/tags/%E8%AF%AD%E6%B3%95/","section":"标签分类","summary":"","title":"语法"},{"content":"译文 #一旦你把汽车停错了地方，交通警察很快就会发现。\n如果他没给你罚单就放你走了，算你走运。\n然而，情况并不都是这样，交通警有时也很客气。\n有一次在瑞典度假，我发现我的车上有这样一个字条：“先生，欢迎您光临我们的城市。\n此处是‘禁止停车\u0026rsquo;区。\n如果您对我们街上的标牌稍加注意，您在此会过得很愉快的。\n谨此提请注意.”\n如果你收到这样的恳求，你是不会不遵照执行的！\n原文 #If you park your car in the wrong place, a traffic police will soon find it.\nYou will be very lucky if he lets you go without a ticket.\nHowever, this does not always happen. Traffic police are sometimes very polite.\nDuring a holiday in Sweden, I found this note on my car: \u0026ldquo;Sir, we welcome you to our city. This is a \u0026lsquo;No parking\u0026rsquo; area. You will enjoy your stay here if you pay attention to our street signs. this note is only a reminder.\u0026rdquo;\nIf you receive a request like this, you cannot fail to obey it.\n重点记忆：\nyou cannot fail to obey it\n你不可能不照做的\n","date":"2025年9月3日","permalink":"https://yyym2017.github.io/english/the-new-concept-english/book2/lesson16/","section":"英语学习","summary":"","title":"A polite request"},{"content":"视频课 # 数据结构的基本概念 重点摘要 #概念：\n数据、数据元素、数据项、数据对象、数据结构、数据类型、抽象数据类型\n数据：\n信息载体，对于计算机来说是所有可以输入计算机并被处理的信息单元，是计算机程序加工的原料\n数据元素：\n是数据的基本单位，通常作为一个整体作为考虑和处理。\n一个数据元素可由若干数据项组成，数据项是构成数据元素不可分割的最小单位\n例如，微信的账号作为一个数据元素看待，那么数据项就包括昵称、性别、年龄等等\n个人理解：\n数据元素、数据项的粒度是根据业务需求确定的，没有一个统一的划分标准。粒度小的数据元素可能作为粒度大的数据元素的数据项\n数据项：\n如果把数据元素当做面向对象编程语言中的对象，那么数据项就是对象的属性\n数据对象:\n代表一类数据元素的集合\n数据结构：\n按特定关系组织的数据元素的集合\n数据类型：\n一类值的集合以及定义在这个集合上的一组操作。包含原子类型和结构类型，原子类型被定义为不可再分割的类型，结构类型可以当做其他数据类型的组合构造而来\n例如：编程语言的布尔类型、整型就是原子类型，c 语言的结构体、java 语言的类就是结构类型\n抽象数据类型：\nADT(abstract data type)，规范了一类数据的逻辑结构，以及其上的操作集合而不关心底层的实现，这样的数据类型称作抽象数据类型\n数据结构三要素：\n逻辑结构、物理结构（存储结构）、数据运算\n逻辑结构：\n数据元素之间的逻辑关系，包含集合、线性、树形、网状（图）等关系。\n集合关系是指包含和不包含的关系；线性关系是一对一的关系，例如编程语言中的数组、队列；树形、网状关系是一对多的，对应数据结构中的树和图\n物理结构：\n计算机底层对于逻辑结构的实现，数据在内存中的组织形式，包括顺序存储、非顺序存储（离散存储）。 其中，非顺序存储又包含链式存储、索引存储、散列存储等\n不同物理结构对数据运算的效率会有影响，就比如顺序存储的数组对查找高效，对删除和插入低效，非顺序存储的链表则相反\n数据运算：\n定义在特定数据结构上的操作集合。拿编程语言的对象举例，这里对应对象的方法集合\n总结 # 图1 图2 ","date":"2025年9月2日","permalink":"https://yyym2017.github.io/408/data-structures-and-algorithms/wangdao/1.1_%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/","section":"计算机考研408专业","summary":"","title":"数据结构的基本概念"},{"content":"译文 #秘书告诉我说哈姆斯沃斯先生要见我。\n我走进他的办公室，感到非常紧张。\n我进去的时候，他连头也没抬。\n待我坐下后，他说生意非常不景气。\n他还告诉我，公司支付不起这么庞大的工资开支，有20个人已经离去。\n我知道这次该轮到我了。\n“哈姆斯沃斯先生，”我无力地说。\n“不要打断我的话，”他说。\n然后他微笑了一下告诉我说，我每年将得到 1,000 英镑的额外收入。\n原文 #The secretary told me that Mr. Harmsworth would see me.\nI felt very nervous when I went into his office.\nHe did not look up from his desk when I entered.\nAfter I had sat down, he said that business was very bad.\nHe told me that the firm could not afford to pay such large saralies.\nTwenty people had already left.\nI knew that my turn had came.\n\u0026ldquo;Mr. Harmsworth,\u0026rdquo; I said in a weak voice.\n\u0026ldquo;Don\u0026rsquo;t interrupt,\u0026rdquo; he said.\nThen he smiled and told me I would receive an extra thousand pounds a year.\n","date":"2025年8月29日","permalink":"https://yyym2017.github.io/english/the-new-concept-english/book2/lesson15/","section":"英语学习","summary":"","title":"Good news"},{"content":"译文 #去年我有过一次有趣的经历。\n在离开法国南部的一个小村庄后，我继续驶往下一个城镇。\n途中，一个青年人向我招手。\n我把车停下，他向我提出要求搭车。\n他一上车，我就用法语向他问好，他也同样用法语回答我。\n除了个别几个单词外，我根本不会法语。\n旅途中我们谁也没讲话。\n就要到达那个镇时，那青年突然开了口，慢慢地说道”你会讲英语吗？” 我很快了解到，他自己就是个英国人！\n原文 #I had an amusing experience last year.\nAfter I had left a small village in the south of France, I drove on to the next town.\nOn the way, a young man waved to me.\nI stopped and he asked me for a lift.\nAs soon as he had got into the car, I said good morning to him in French and he replied me in the same language.\nApart from a few words, I do not know any French at all.\nNeither of us spoke during the journey.\nI had nearly reached the town, when the young man suddenly said, very slowly, \u0026ldquo;Do you speak English?\u0026rdquo;\nAs I soon learnt, he was a English himself!\n","date":"2025年8月28日","permalink":"https://yyym2017.github.io/english/the-new-concept-english/book2/lesson14/","section":"英语学习","summary":"","title":"Do you speak English?"},{"content":" 计算机408专业类考研复习 ","date":null,"permalink":"https://yyym2017.github.io/408/","section":"计算机考研408专业","summary":"","title":"计算机考研408专业"},{"content":" 数据结构与算法科目复习 ","date":null,"permalink":"https://yyym2017.github.io/408/data-structures-and-algorithms/","section":"计算机考研408专业","summary":"","title":"数据结构与算法"},{"content":"视频课 # 数据结构在学什么 笔记 #数据结构在学什么：\n如何用程序代码把现实世界的问题信息化 如何用计算机高效地处理这些信息从而创造价值 数据结构所在层次 总结 #现实生活中的排队（线性） -\u0026gt; 海底捞取号就餐 -\u0026gt; 数据结构中的队列\n人际间的关系（网状） -\u0026gt; 微博关注 -\u0026gt; 数据结构中的图\n","date":"2025年8月28日","permalink":"https://yyym2017.github.io/408/data-structures-and-algorithms/wangdao/1.0_%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%9C%A8%E5%AD%A6%E4%BB%80%E4%B9%88/","section":"计算机考研408专业","summary":"","title":"数据结构在学什么"},{"content":" 王道计算机考研数据结构与算法网课 ","date":null,"permalink":"https://yyym2017.github.io/408/data-structures-and-algorithms/wangdao/","section":"计算机考研408专业","summary":"","title":"王道数据结构与算法网课"},{"content":"译文 #“绿林少年”是一个流行歌曲演唱团。\n目前他们正在全国各地巡回演出 ，明天就要到达此地。\n他们将乘火车来，镇上的大部分青年人将到车站迎接他们。\n明晚他们将在工人俱乐部演出。\n“绿林少年”准备在此逗留5天。\n在此期间，他们将演出5场。\n同往常一样 ，警察的日子不好过，他们将设法维持秩序。\n每逢这种场合，情况都这样。\n原文 #The Greenwood Boys are a group of pop singers.\nAt present, They are visting all parts of the country.\nThey will be arriving here tomorrow.\nThey will be coming by train and most of the young people in the town will be meeting them at the station.\nTomorrow evening they will be singing at the Workers\u0026rsquo; Club.\nThe Greenwood Boys will be staying for five days.\nDuring this time, they will give five performances.\nAs usual, the police will have a difficult time.\nThey will be trying to keep order.\nIt is always the same on these occasions.\n亮点句子\nIt is always the same on these occasions.\n遇到这种场合情况每每都相同。\n","date":"2025年8月27日","permalink":"https://yyym2017.github.io/english/the-new-concept-english/book2/lesson13/","section":"英语学习","summary":"","title":"The Greenwood Boys"},{"content":"","date":null,"permalink":"https://yyym2017.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/","section":"标签分类","summary":"","title":"学习方法"},{"content":" 步骤一：中译英。先不看英文原文，按照自己的理解把新概念的中文译文译为英文，练习写作及翻译，译完之后不看原文。\n步骤二：听写。网上下载英式或美式MP3录音，听四遍全部写下来，基础薄弱的同学听一句写一句，基础较好的同学听一段写一段，练习了听力。\n步骤三：仔细对比原文。对比两篇文章。一是自己中译英的文章与新概念的原文对比，提高了写作和翻译；二是自己听写的文章与原文对比，提高了听力，然后跟读模仿听写错误之处。\n步骤四：跟读模仿。一周模仿一课，务求惟妙惟肖，练习了口语。\n步骤五：背熟。将文章背至滚瓜烂熟，听说读写译全部提高。\n步骤六：默写仿写。默写背熟的文章，之后仔细对比原文改正错误；使用背过的文章去仿写别的题目，尽可能使用背过的表达，练习了写作。\n这里援引的是某位大佬的英语学习方法论，具体名字忘记了，我觉得很实际\n","date":"2025年8月27日","permalink":"https://yyym2017.github.io/english/learning-approach/","section":"英语学习","summary":"","title":"英语学习方法论"},{"content":"","date":null,"permalink":"https://yyym2017.github.io/tags/.gitignore/","section":"标签分类","summary":"","title":".Gitignore"},{"content":"","date":null,"permalink":"https://yyym2017.github.io/tags/git/","section":"标签分类","summary":"","title":"Git"},{"content":"","date":null,"permalink":"https://yyym2017.github.io/tags/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/","section":"标签分类","summary":"","title":"版本控制"},{"content":"项目文件纳入版本控制后进行了初始化提交，导致很多不必要文件也纳入了版本管理，这时候再添加 .gitignore 文件进行排除是无效的。\n这时候我们可以这样做：\ngit rm -r --cached . 然后项目文件再整个重新提交\ngit add . git commit -m \u0026#39;commit message\u0026#39; git push origin branch-name 贴上 Java Maven 管理的 .gitignore 文件\n### Local files *.iml local/ *-local.* .idea/ ### Maven template target/ pom.xml.tag pom.xml.releaseBackup pom.xml.versionsBackup pom.xml.next release.properties dependency-reduced-pom.xml buildNumber.properties .mvn/timing.properties # https://github.com/takari/maven-wrapper#usage-without-binary-jar .mvn/wrapper/maven-wrapper.jar ### Java template # Compiled class file *.class # Log file *.log # BlueJ files *.ctxt # Mobile Tools for Java (J2ME) .mtj.tmp/ # Package Files # *.jar *.war *.nar *.ear *.zip *.tar.gz *.rar # virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml hs_err_pid* ### VisualStudioCode template .vscode/* !.vscode/settings.json !.vscode/tasks.json !.vscode/launch.json !.vscode/extensions.json *.code-workspace # Local History for Visual Studio Code .history/ ### JetBrains template # Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio, WebStorm and Rider # Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839 # User-specific stuff .idea/**/workspace.xml .idea/**/tasks.xml .idea/**/usage.statistics.xml .idea/**/dictionaries .idea/**/shelf # Generated files .idea/**/contentModel.xml # Sensitive or high-churn files .idea/**/dataSources/ .idea/**/dataSources.ids .idea/**/dataSources.local.xml .idea/**/sqlDataSources.xml .idea/**/dynamic.xml .idea/**/uiDesigner.xml .idea/**/dbnavigator.xml # Gradle .idea/**/gradle.xml .idea/**/libraries # Gradle and Maven with auto-import # When using Gradle or Maven with auto-import, you should exclude module files, # since they will be recreated, and may cause churn. Uncomment if using # auto-import. # .idea/artifacts # .idea/compiler.xml # .idea/jarRepositories.xml # .idea/modules.xml # .idea/*.iml # .idea/modules # *.iml # *.ipr # CMake cmake-build-*/ # Mongo Explorer plugin .idea/**/mongoSettings.xml # File-based project format *.iws # IntelliJ out/ # mpeltonen/sbt-idea plugin .idea_modules/ # JIRA plugin atlassian-ide-plugin.xml # Cursive Clojure plugin .idea/replstate.xml # Crashlytics plugin (for Android Studio and IntelliJ) com_crashlytics_export_strings.xml crashlytics.properties crashlytics-build.properties fabric.properties # Editor-based Rest Client .idea/httpRequests # Android studio 3.1+ serialized cache file .idea/caches/build_file_checksums.ser ### Eclipse template .metadata bin/ tmp/ *.tmp *.bak *.swp *~.nib local.properties .settings/ .loadpath .recommenders # External tool builders .externalToolBuilders/ # Locally stored \u0026#34;Eclipse launch configurations\u0026#34; *.launch # PyDev specific (Python IDE for Eclipse) *.pydevproject # CDT-specific (C/C++ Development Tooling) .cproject # CDT- autotools .autotools # Java annotation processor (APT) .factorypath # PDT-specific (PHP Development Tools) .buildpath # sbteclipse plugin .target # Tern plugin .tern-project # TeXlipse plugin .texlipse # STS (Spring Tool Suite) .springBeans # Code Recommenders .recommenders/ # Annotation Processing .apt_generated/ .apt_generated_test/ # Scala IDE specific (Scala \u0026amp; Java development for Eclipse) .cache-main .scala_dependencies .worksheet # Uncomment this line if you wish to ignore the project description file. # Typically, this file would be tracked if it contains build/dependency configurations: #.project ### Node template # Logs logs *.log npm-debug.log* yarn-debug.log* yarn-error.log* lerna-debug.log* # Diagnostic reports (https://nodejs.org/api/report.html) report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json # Runtime data pids *.pid *.seed *.pid.lock # Directory for instrumented libs generated by jscoverage/JSCover lib-cov # Coverage directory used by tools like istanbul coverage *.lcov # nyc test coverage .nyc_output # Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files) .grunt # Bower dependency directory (https://bower.io/) bower_components # node-waf configuration .lock-wscript # Compiled binary addons (https://nodejs.org/api/addons.html) build/Release # Dependency directories node_modules/ jspm_packages/ # Snowpack dependency directory (https://snowpack.dev/) web_modules/ # TypeScript cache *.tsbuildinfo # Optional npm cache directory .npm # Optional eslint cache .eslintcache # Microbundle cache .rpt2_cache/ .rts2_cache_cjs/ .rts2_cache_es/ .rts2_cache_umd/ # Optional REPL history .node_repl_history # Output of \u0026#39;npm pack\u0026#39; *.tgz # Yarn Integrity file .yarn-integrity # dotenv environment variables file .env .env.test # parcel-bundler cache (https://parceljs.org/) .cache .parcel-cache # Next.js build output .next out # Nuxt.js build / generate output .nuxt dist # Gatsby files .cache/ # Comment in the public line in if your project uses Gatsby and not Next.js # https://nextjs.org/blog/next-9-1#public-directory-support # public # vuepress build output .vuepress/dist # Serverless directories .serverless/ # FuseBox cache .fusebox/ # DynamoDB Local files .dynamodb/ # TernJS port file .tern-port # Stores VSCode versions used for testing VSCode extensions .vscode-test # yarn v2 .yarn/cache .yarn/unplugged .yarn/build-state.yml .yarn/install-state.gz .pnp.* ### Gradle template .gradle **/build/ !src/**/build/ # Ignore Gradle GUI config gradle-app.setting # Avoid ignoring Gradle wrapper jar file (.jar files are usually ignored) !gradle-wrapper.jar # Cache of project .gradletasknamecache # # Work around https://youtrack.jetbrains.com/issue/IDEA-116898 # gradle/wrapper/gradle-wrapper.properties ### Kotlin template # Compiled class file *.class # Log file *.log # BlueJ files *.ctxt # Mobile Tools for Java (J2ME) .mtj.tmp/ # Package Files # *.jar *.war *.nar *.ear *.zip *.tar.gz *.rar # virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml hs_err_pid* ","date":"2025年8月27日","permalink":"https://yyym2017.github.io/sketch/gitignore/","section":"随笔记录","summary":"","title":"关于 .gitignore"},{"content":"译文 #我们的邻居查尔斯.艾利森船长明天就要从扑次茅斯启航了。\n明天一大早我们将在码头为他送行。\n他将乘坐他的‘涛波赛\u0026rsquo;号小艇。\n“涛波赛”号是艘有名的小艇，他已经多次横渡大西洋。\n艾利森船长将于8点钟启航，因此我们有充裕的时间。\n我们将参观他的船，然后和他告别。\n他要离开两个月，我们真为他感到自豪，他将参加一次重大的横渡大西洋的比赛。\n原文 #Our neighbour, Captain Charles Alison, will sail from Portsmouth tomorrow.\nWe\u0026rsquo;ll meet him at the early in the morning.\nHe will be in his small boat, Topsail.\nTopsail is a famous little boat, it has sailed across the Atlantic many times.\nCaptain Alison will set out at eight o\u0026rsquo;clock, so we have plenty of time.\nWe\u0026rsquo;ll see his boat and then we\u0026rsquo;ll say good bye to him.\nHe will be away for two months.\nWe are very proud of him.\nHe will take part in an important race across the Atlantic.\n生词 #set out: 出发、启程\naway: 不在的、客场的\n","date":"2025年8月26日","permalink":"https://yyym2017.github.io/english/the-new-concept-english/book2/lesson12/","section":"英语学习","summary":"","title":"Goodbye and good luck"},{"content":"译文 #我正在一家饭馆吃饭，托尼.斯蒂尔走了进来。\n托尼曾在一家律师事务所工作，而现在正在一家银行上班。\n他的薪水很高，但他却总是向朋友借钱，并且从来不还。\n托尼看见了我，就走过来和我坐到一张桌子前。\n他从未向我借过钱，但他吃饭时，我提出向他借20英镑。\n令我惊奇的是，他立刻把钱给了我。\n“我还未向你借过钱。”托尼说道，“所以现在你可以替我付饭钱了！”\n原文 #I was having dinner at a restaurant when Tony Steele came in.\nTony worked in a layer\u0026rsquo;s office years ago, but he is now working at a bank.\nHis gets a good salary, but he always borrows money from his friend and never pays it back.\nTony saw me and came and sat at the same table.\nHe has never borrowed money from me.\nWhile he was eating, I asked him to lend me twenty pounds.\nTo my surprise, he gave me the money immediately.\n\u0026ldquo;I have never borrowed any money from you,\u0026rdquo; Tony said, \u0026ldquo;so now you can pay for my dinner.\u0026rdquo;\n","date":"2025年8月26日","permalink":"https://yyym2017.github.io/english/the-new-concept-english/book2/lesson11/","section":"英语学习","summary":"","title":"One good turn deserves another"},{"content":"译文 #我们有一件古老的乐器,叫击弦古钢琴。\n它是1681年德国制造的, 我们这架钢琴放在客厅里。\n我们家拥有它很长时间了,这件乐器是许多年前我祖父买来的。\n最近它被一位客人弄坏了,她用它弹奏爵士乐!\n她按键太猛,把两根弦按断了。\n我父亲为之震怒。\n现在他不允许我们再碰它。\n父亲的一位朋友正在修理这件古老的乐器。\n原文 #We have a old musical instrument.\nIt is called a clavichord.\nIt was made in Germany in 1681.\nOur clavichord is kept in living room.\nIt has belonged to our family for a long time.\nThe instrument was bought by my grandfather many years ago.\nRecently it was damaged by a visitor.\nShe tried to play Jazz on it.\nShe struck the keys too hard and two of the strings were broken.\nMy father was shocked.\nNow we are not allowed to touch it.\nIt is being repaired by a friend of my father\u0026rsquo;s.\n生词 #clavichord: 击弦古钢琴\nGermany: 德国\nstring: 弦、琴弦\n此文主要考察对被动语态的用法\n","date":"2025年8月25日","permalink":"https://yyym2017.github.io/english/the-new-concept-english/book2/lesson10/","section":"英语学习","summary":"","title":"Not For Jazz"},{"content":"译文 #星期三的晚上，我们去了市政厅。\n那是一年的最后一天 ，一大群人聚集在市政厅的大钟下面。\n再过20分钟，大钟将敲响12下 。 15分钟过去了，而就在11点55分时，大钟停了。\n那根巨大的分针不动了。\n我们等啊等啊， 可情况没有改变。 突然有人喊道：“已经12点零2分了！那钟已经停了！”我看了一下我的手表，果真如此。\n那座大钟不愿意迎接新年。\n此时，大家已经笑了起来，同时唱起了歌。\n原文 #On wednesday evening, we went to the Town Hall.\nIt was the last day of year and a large crowd of people had gathered under the Town Hall clock.\nIt would strike twelve in twenty minutes\u0026rsquo; time.\nFifteen minutes passed and then, at five to twelve, the clock stopped.\nThe big minute hand did not move.\nWe waited and waited, but nothing happened.\nSuddenly someone shouted, \u0026ldquo;It\u0026rsquo;s two minutes past twelve! The clock has stopped!\u0026rdquo; I looked at my watch, it was true.\nThe big clock refused to welcome the New Year.\nAt that moment, everybody began laugh and sing.\n","date":"2025年8月25日","permalink":"https://yyym2017.github.io/english/the-new-concept-english/book2/lesson9/","section":"英语学习","summary":"","title":"A cold welcome"},{"content":"译文 #乔.桑德斯拥有我们镇上最漂亮的花园。\n几乎每个人都参加每年举办的“最佳花园竞赛”，而每次都是乔获胜。 比尔.弗里斯的花园比乔的花园大，他比乔也更为勤奋，种植的花卉和蔬菜也更多，但乔的花园更富有情趣。\n他修筑了一条条整洁的小路，并在一个池塘上架了一座小木桥。 我也喜欢花园，但我却不愿意辛勤劳动。\n每年的花园竞赛我也参加，但总因是镇上最劣的花园而获得一个小奖！\n原文 #Joe Sanders has the most beautiful garden in our town.\nNearly everybody enters for \u0026ldquo;The Nicest Garden Competition\u0026rdquo; each year, but Joe wins every time.\nBill Frith\u0026rsquo;s garden is larger than Joe\u0026rsquo;s.\nBill works harder than Joe and grows more flowers and vegetables, but Joe\u0026rsquo;s garden is more interesting.\nHe has made neat paths and has built a wooden bridge over a pool.\nI like gardens too, but I do not like hard work.\nEvery year I enter for the garden competition too, and I always win a little prize for the worst garden in the town!\n","date":"2025年8月25日","permalink":"https://yyym2017.github.io/english/the-new-concept-english/book2/lesson8/","section":"英语学习","summary":"","title":"The best and the worst"},{"content":"译文 #飞机误点了，侦探们在机场等了整整一上午。\n他们正期待从南非来的一个装着钻石的贵重包裹。\n数小时以前，有人向警方报告，说有人企图偷走这些钻石。\n当飞机到达时，一些侦探等候在主楼内，另一些侦探则守候在停机坪上。\n有两个人把包裹拿下飞机，进了海关。\n这时两个侦探把住门口，另外两个侦探打开了包裹。\n令他们吃惊的是，那珍贵的包裹里面装的全是石头和沙子！\n原文 #The plane was late and detectives were waiting at the airport all morning.\nThey were expecting a valuable parcel of diamonds from South Africa.\nA few hours earlier, someone had told the police that thieves would try to steal the diamonds.\nWhen the plane arrived, some of the detectives were waiting inside the main building while the others were keeping guard on the airfield.\nTwo men took the parcel off the plane and carried it into the Customs House.\nWhile two detectives were keeping guard at the door, two others opened the parcel.\nTo their suprise, the precious parcel was full of stones and sand.\n","date":"2025年8月25日","permalink":"https://yyym2017.github.io/english/the-new-concept-english/book2/lesson7/","section":"英语学习","summary":"","title":"Too late"},{"content":"译文 #我刚刚搬进了大桥街的一所房子。\n昨天一个乞丐来敲我的门，问我要一顿饭和一杯啤酒。\n作为回报，那乞丐头顶地倒立起来，嘴里还唱着歌。\n我给了他一顿饭。\n他把食物吃完，又喝了酒。\n然后把一块乳酪装进衣袋里走了。\n后来，一位邻居告诉了我他的情况。\n大家都认识他，他叫珀西.巴顿斯。\n他每月对这条街上的每户人家光顾一次，总是请求给他一顿饭和一杯啤酒。\n原文 #I have jsut moved into a house in Bridge Street.\nYesterday a beggar knocked at my door.\nHe asked me for a meal and a glass of beer.\nIn return for this, the beggar stood on his head and sang songs.\nI gave him a meal.\nHe ate the food and drank the beer.\nThen he put a piece of cheese in his pocket and went away.\nLater a neibour told me about him.\nEverybody knows him.\nHis name is Percy Buttons.\nHe calls at every house in this street once a month and always asks for a meal and a glass of beer.\n","date":"2025年8月25日","permalink":"https://yyym2017.github.io/english/the-new-concept-english/book2/lesson6/","section":"英语学习","summary":"","title":"Percy Buttons"},{"content":"译文 #詹姆斯·斯科特先生在锡尔伯里有一个汽车修理部，现在他刚在平赫斯特买了另一个汽车修理部。\n平赫斯特离锡尔伯里只有5英里，但詹姆斯·斯科特先生未能为他新的汽车修理部搞到一部电话机，所以他买了12只鸽子。\n昨天，一只鸽子把第一封信从平赫斯特带到锡尔伯里。\n这只鸟只用了3分钟就飞完了全程。到目前为止，斯科特先生从一个汽车修理部向另一个发送了大量索取备件的信件和其他紧急函件。\n就这样，他开始了自己的私人“电话”业务。\n原文 #Mr. James Scott has a garage in Silbury and now he has just bought another garage in Pinhurst.\nPinhurst is only five miles from Silbury, but Mr. Scott cannot get a telephone for his new garage, so he has just bought twelve pigeons.\nYesterday, a pigeon carried the first message from Pinhurst to Silbury.\nThe bird covered the distance in three minutes.\nUp to now, Mr. Scott has sent a great many requests for spare parts and other urgent messages from one garage to the other.\nIn this way, he has begun his own private \u0026rsquo;telephone\u0026rsquo; service.\n","date":"2025年8月23日","permalink":"https://yyym2017.github.io/english/the-new-concept-english/book2/lesson5/","section":"英语学习","summary":"","title":"No wrong number"},{"content":"译文 #我刚刚收到弟弟蒂姆的来信，他正在澳大利亚。\n他在那儿已经住了6个月了。\n蒂姆是个工程师，正在为一家大公司工作，并且已经去过澳大利亚的不少地方了。\n他刚买了一辆澳大利亚小汽车，现在去了澳大利亚中部的小镇艾利斯斯普林斯。\n他不久还将到达尔文去，从那里，他再飞往珀斯。\n我弟弟以前从未出过国，因此，他觉得这次旅行非常激动人心。\n原文 #I have just received a letter from my brother, Tim.\nHe is in Australia.\nHe has been there for six months.\nTim is an engineer.\nHe is working for a big firm and he has already visited a great number of different places in Australia.\nHe has just bought an Australia car and has gone to Alice Springs, a small town in the centre of Australia.\nHe will soon visit Drawin.\nFrom there, he will fly to Perth.\nMy brother has never been abroad before, so he is finding this trip very exciting.\nhe is finding this trip very exciting 是主谓宾 + 宾补句型\n","date":"2025年8月23日","permalink":"https://yyym2017.github.io/english/the-new-concept-english/book2/lesson4/","section":"英语学习","summary":"","title":"An exciting trip"},{"content":"这是一个非常核心的英语语法问题。简单来说：\nthe：单数和复数都可以接，取决于它指代的名词本身。 any：主要用于复数或不可数名词，但在特定情况下也接单数。 下面我们来详细分解。\n1. 定冠词 The #the 是定冠词，它的作用是特指“那个”或“那些”。它本身没有单复数形式，但其后的名词有单复数之分，动词需要根据名词的单复数进行变化。\n情况 例子 解释 + 单数名词 The book is on the table. The student is very smart. 特指“那一本书”、“那个学生”。 + 复数名词 The books are on the table. The students are in the classroom. 特指“那些书”、“那些学生们”。 + 不可数名词 The water in this bottle is cold. I love the music he plays. 特指“这瓶里的水”、“他演奏的音乐”。 结论： the 后接名词的单复数形式，取决于你想表达的是单个、多个还是不可数的概念。\n2. 不定代词 Any #any 的含义和用法更复杂一些，它取决于句子类型和你想表达的意思。\nA. 在疑问句和否定句中（最常见用法） #在这种句式里，any 表示“一些；任何”，通常接复数名词或不可数名词。\n情况 例子 解释 + 复数名词 Are there any questions? I don\u0026rsquo;t have any friends here. 询问或否定“一些问题”、“一些朋友”。 + 不可数名词 Is there any water left? There isn\u0026rsquo;t any time to waste. 询问或否定“一些水”、“任何时间”。 注意： 在否定句中，any 几乎不接单数可数名词。我们不会说 I don't have any pen.，而会说 I don't have a pen. 或 I don't have any pens.。\nB. 在肯定句中 #在肯定句中，any 表示“任何一个；无论哪个”，此时它后面接单数可数名词。\n例子 解释 You can choose any book you like. 你可以选择任何一本你喜欢的书。（从很多本中任选一本） Any student can answer this question. 任何一个学生都能回答这个问题。（所有学生中的任意一个） C. 在条件句中 #在 if 引导的条件句中，any 的用法与疑问句/否定句相同，接复数或不可数名词。\n例子 解释 If you have any problems, call me. 如果你有任何问题，打电话给我。 Let me know if you need any help. 如果你需要任何帮助，告诉我。 📊 总结对比表 # 冠词/代词 主要用法 后接名词类型 例句 The 特指 可数名词单数 The cat is cute. 可数名词复数 The cats are cute. 不可数名词 The water is clean. Any 疑问/否定句 可数名词复数 I don\u0026rsquo;t have any cats. 不可数名词 I don\u0026rsquo;t have any water. 肯定句 可数名词单数 Any cat would love this. (任何一只猫) 核心诀窍：\n看到 the，想一想你特指的东西是一个还是多个。 看到 any，先看句式： 疑问句/否定句 -\u0026gt; 通常用复数或不可数。 肯定句 -\u0026gt; 表示“任一”时，用单数。 这篇文章引自 AI 生成，出于我自己的不解询问所得，记录了下来\n","date":"2025年8月22日","permalink":"https://yyym2017.github.io/english/syntax/any-and-the/","section":"英语学习","summary":"","title":"Any 和 The 后接名词形式"},{"content":"译文 #明信片总搅得我假日不得安宁。\n去年夏天，我去了意大利。\n我参观了博物馆，还去了公园。\n一位好客的服务员教了我几句意大利语，之后还借给我一本书。\n我读了几行，但一个字也不懂。\n我每天都想着明信片的事。\n假期过得真快，可我还没有给我的朋友们寄过一张明信片。\n到了最后一天，我作出了一项重大决定。\n我早早起了床，买来了37张明信片。\n我在房间里关了整整一天。然而竟连一张明信片也没写成！\n原文 #Postcards always spoil my holidays.\nLast summer I went to Italy.\nI visited museums and sat in public gardens.\nA friendly waiter taught me a few words of Italian.\nThen he lent me a book.\nI read a few lines, but I did not understand a word.\nEvery day I thought about postcards.\nMy holidays passed quickly, but I did not send cards to my friends.\nOn the last day I made a big decision.\nI got up early and bought thirty-seven cards.\nI spent the whole day in my room.\nBut I did not write a single card!\nread 的过去时和过去分词都是 read，但是读音变了，读作 [red] (美/英式发音)\n","date":"2025年8月22日","permalink":"https://yyym2017.github.io/english/the-new-concept-english/book2/lesson3/","section":"英语学习","summary":"","title":"Please send me a card"},{"content":"译文 #那是个星期天，而在星期天我是从来不早起的，有时我要一直躺到吃午饭的时候。\n上个星期天，我起得很晚。\n我望望窗外，外面一片昏暗。\n“鬼天气！”我想，“又下雨了。\n”正在这时，电话铃响了。\n是我姑母露西打来的。“我刚下火车，”她说，“我这就来看你。”\n“但我还在吃早饭，”我说。\n“你在干什么？”她问道。\n“我正在吃早饭，”我又说了一遍。\n“天啊，”她说，“你总是起得这么晚吗？现在已经1点钟了！”\n原文 #It was Sunday.\nI never get up early on Sundays.\nI sometimes stay in bed until lunchtime.\nLast Sunday I got up very late.\nI looked out of the window.\nIt was darkness outside.\n\u0026ldquo;What a day!\u0026rdquo; I thought.\n\u0026ldquo;It\u0026rsquo;s raining again!\u0026rdquo;\nJust then, the telephone rang.\nIt was my aunt Lucy.\n\u0026ldquo;I\u0026rsquo;ve just arrived by train,\u0026rdquo; she said.\n\u0026ldquo;I\u0026rsquo;m just coming to see you!\u0026rdquo;\n\u0026ldquo;But I\u0026rsquo;m still having breakfast,\u0026rdquo; I said.\n\u0026ldquo;What are you doing?\u0026rdquo; she asked.\n\u0026ldquo;I\u0026rsquo;m having breakfast,\u0026rdquo; I repeated.\n\u0026ldquo;Dear me,\u0026rdquo; she said.\n\u0026ldquo;Do you always get up so late? It\u0026rsquo;s one o\u0026rsquo;clock!\u0026rdquo;\n理解一般现在时、一般过去时、过去完成时、现在进行时在文中的运用\n","date":"2025年8月22日","permalink":"https://yyym2017.github.io/english/the-new-concept-english/book2/lesson2/","section":"英语学习","summary":"","title":"Breakfast or lunch"},{"content":"","date":null,"permalink":"https://yyym2017.github.io/computer/data-structures-and-algorithms/","section":"计算机科学","summary":"","title":"算法"},{"content":"","date":null,"permalink":"https://yyym2017.github.io/tags/algorithm/","section":"标签分类","summary":"","title":"Algorithm"},{"content":"","date":"2025年8月22日","permalink":"https://yyym2017.github.io/computer/data-structures-and-algorithms/hello-algo-externalurl/","section":"计算机科学","summary":"","title":"hello 算法"},{"content":"","date":null,"permalink":"https://yyym2017.github.io/tags/markdown/","section":"标签分类","summary":"","title":"Markdown"},{"content":"📃 1. 标题 (Headers) #通过 # 的数量来表示不同级别的标题，从一级到六级。\n# 一级标题 (H1) ## 二级标题 (H2) ### 三级标题 (H3) #### 四级标题 (H4) ##### 五级标题 (H5) ###### 六级标题 (H6) 效果：\n一级标题 (H1) #二级标题 (H2) #三级标题 (H3) # 📝 2. 文本样式 (Text Styles) #*斜体文本* 或 _斜体文本_ **粗体文本** 或 __粗体文本__ ***粗斜体*** 或 ___粗斜体___ ~~删除线文本~~ `行内代码片段` 效果： 斜体文本 或 斜体文本 粗体文本 或 粗体文本 粗斜体 或 粗斜体 删除线文本 行内代码片段\n📃 3. 列表 (Lists) #无序列表 (Unordered List) #使用 -, *, 或 + 加一个空格。\n- 项目一 - 项目二 - 子项目一 (缩进两个空格或一个制表符) - 子项目二 - 项目三 效果：\n项目一 项目二 子项目一 子项目二 项目三 有序列表 (Ordered List) #使用 数字. 加一个空格。\n1. 第一项 2. 第二项 3. 第三项 效果：\n第一项 第二项 第三项 🔗 4. 链接与图片 (Links \u0026amp; Images) #链接 (Links) #[链接文字](URL \u0026#34;可选的标题提示文字\u0026#34;) 示例： 访问 [Google](https://www.google.com) 进行搜索。 效果： 访问 Google 进行搜索。\n图片 (Images) #语法和链接几乎一样，只是在前面加一个 !。\n![图片的替代文字(Alt Text)](图片的URL或路径 \u0026#34;可选的标题提示文字\u0026#34;) 示例： ![Markdown Logo](https://markdown-here.com/img/icon256.png \u0026#34;Markdown Logo\u0026#34;) ➗ 5. 引用与代码块 (Blockquotes \u0026amp; Code Blocks) #引用 (Blockquotes) #使用 \u0026gt; 符号。\n\u0026gt; 这是一个引用。 \u0026gt; 这是引用的第二行。 \u0026gt; \u0026gt; \u0026gt; 这是嵌套的引用。 效果：\n这是一个引用。 这是引用的第二行。\n这是嵌套的引用。\n代码块 (Code Blocks) #行内代码： 用一个反引号 ` 包裹。\n使用 `console.log()` 函数来打印信息。 效果： 使用 console.log() 函数来打印信息。\n代码块： 用三个反引号 ``` 包裹代码，并可在开头指定语言以实现语法高亮。\n```javascript // 这是一个 JavaScript 代码块 function greet(name) { return `Hello, ${name}!`; } ``` 效果：\n// 这是一个 JavaScript 代码块 function greet(name) { return `Hello, ${name}!`; } ➖ 6. 分割线与换行 (Horizontal Rules \u0026amp; Line Breaks) #分割线 (Horizontal Rules) #使用三个或更多的 -, *, 或 _ 来创建一条分割线。\n--- *** ___ 效果： # 换行 (Line Breaks) #在行尾添加 两个空格 再加回车，或者直接空一行再写下一行。\n📊 7. 表格 (Tables) #使用 | 来分隔单元格，- 来分隔表头和其他行。\n| 左对齐 | 居中对齐 | 右对齐 | | :----- | :------: | -----: | | 单元格 | 单元格 | 单元格 | | 内容 | 内容 | 100 | 效果：\n左对齐 居中对齐 右对齐 单元格 单元格 单元格 内容 内容 100 :- 左对齐 :-: 居中对齐 -: 右对齐 ✅ 8. 任务列表 (Task Lists) #在无序列表的基础上，使用 [ ] 表示未完成，[x] 表示已完成。\n- [x] 已完成的任务 - [ ] 未完成的任务一 - [ ] 未完成的任务二 效果：\n已完成的任务 未完成的任务一 未完成的任务二 ↩️ 9. 转义字符 (Escaping) #如果你就是想输入 Markdown 的符号本身，可以在它前面加一个反斜杠 \\。\n\\* 这不是斜体 \\* \\# 这不是标题 效果： * 这不是斜体 * # 这不是标题\n","date":"2025年8月22日","permalink":"https://yyym2017.github.io/sketch/markdown-syntax/","section":"随笔记录","summary":"","title":"Markdown 高频语法总结"},{"content":"","date":null,"permalink":"https://yyym2017.github.io/tags/","section":"标签分类","summary":"","title":"标签分类"},{"content":"","date":null,"permalink":"https://yyym2017.github.io/tags/gitee/","section":"标签分类","summary":"","title":"Gitee"},{"content":"","date":null,"permalink":"https://yyym2017.github.io/tags/github/","section":"标签分类","summary":"","title":"Github"},{"content":"写在前面 #统一说明，我们这里的配置，针对的是账户维度的 SSH 公钥配置，此外还有仓库维度的。仓库维度的密钥只适用于拉取代码用于构建部署，配置方法类似。\n生成 SSH 密钥对 #这里先贴一个 Gitee 生成和配置 SSH 密钥对的文档，这个是中文，而且通俗易懂，生成密钥对的操作对于 Github 也适用\n# -C 选项接的是注释，可以填任意字符串，Github 建议使用邮箱 # 通过键入三次回车完成生成 ssh-keygen -t ed25519 -C \u0026#34;comments\u0026#34; # 查看生成的密钥对文件：id_ed25519 id_ed25519.pub（此为公钥文件，我们要使用的就是它） ls ~/.ssh/ # 读出公钥文件内容，此时终端会显示公钥内容，类似于 “ssh-ed25519 ****** your comments”，拷贝后续使用 cat ~/.ssh/id_ed25519.pub 配置 SSH 公钥 #Github # 进入主页，依次点击头像 -\u0026gt; Settings -\u0026gt; SSH and GPG keys -\u0026gt; New SSH key，在弹窗输入名称和终端拷贝的 SSH 公钥，点击 Add SSH key 保存。\n完成后可以通过 ssh -T git@github.com 进行测试，如果终端输出包含 ‘successful’ 字样便代表配置成功了。\nGitee #Gitee 配置类似\n进入主页，依次点击头像 -\u0026gt; 账号设置 -\u0026gt; SSH 公钥，在右侧输入名称和公钥，点击确定保存即可。\n通过 ssh -T git@gitee.com 进行测试。\n","date":"2025年8月22日","permalink":"https://yyym2017.github.io/sketch/github-ssh-pk-config/","section":"随笔记录","summary":"","title":"Github/Gitee SSH 公钥配置"},{"content":"","date":null,"permalink":"https://yyym2017.github.io/tags/ssh/","section":"标签分类","summary":"","title":"SSH"},{"content":"译文 #上星期我去看戏。\n我的位置很好，戏也很有意思，但我却无法欣赏。\n一青年男子与一青年女子坐在我的身后，大声地说着话。\n我非常生气，因为我听不见演员在说什么。\n我回过头去怒视着那一男一女，他们却毫不理会。\n最后， 我忍不住了， 又一次回过头去， 生气地说：“我一个字也听不见了！”\n“不关你的事，” 那男的毫不客气地说，“这是私人间的谈话！”\n原文 #Last week I went to the theatre.\nI have a very good seat.\nThe play was very interesting.\nI did not enjoy it.\nA man and a woman were sitting behind me.\nThey were talking loundly.\nI got very angry.\nI could not hear the actors.\nI turned round.\nI looked at the man and the woman angrily.\nThey did not pay any attention.\nIn the end, I could not bear it.\nI turned round again.\n\u0026ldquo;I can\u0026rsquo;t hear a word!\u0026rdquo; I said angrily.\n\u0026ldquo;It\u0026rsquo;s none of your business,\u0026rdquo; the young man said rudely.\n\u0026ldquo;This is a private conversation!\u0026rdquo;\n理解一般过去时、过去进行时在文中的运用\n","date":"2025年8月21日","permalink":"https://yyym2017.github.io/english/the-new-concept-english/book2/lesson1/","section":"英语学习","summary":"","title":"A private conversation"},{"content":" 新概念英语第二册 ","date":null,"permalink":"https://yyym2017.github.io/english/the-new-concept-english/book2/","section":"英语学习","summary":"","title":"第二册"},{"content":" 说是新概念英语学习，不如说是在默写课文。\n这么多年的沉浮，我明白了一个道理，语言学习无非就是多积攒输入方才有输出。\n我要做的就是多听、多读、多写。\n如果有心网友发现这些文章，权当它是新概念英语的电子课本即可。 ","date":null,"permalink":"https://yyym2017.github.io/english/the-new-concept-english/","section":"英语学习","summary":"","title":"新概念英语学习"},{"content":"概览 #以下思维导图是这篇文章的一个概要\n第一类句型（主语+谓语） #这类句型只包含简单的主语和谓语，主语由名词和代词充当，谓语则由不及物动词充当\n表示来、去、出发、到达等意义的往来动词 go, come, begin, start, leave, arrive, move等 存在动词 exist, be (有，存在) 发生动词 happen, occur等 例句： I go We talk\n要点： 可以包含修饰成分，如介词短语，副词，状语从句等，修饰谓语动词如I study hard, I run fast, We talk loudly，be动词作为“存在，有”的意思可以用于这类句型\n第二类句型（主系表） #包含主语，系动词，表语（补语），表语由名词、代词、形容词充当\n用于这类句型的典型动词包括be动词，become，感官动词，turn，seem等\n例句： I am a student（我是一个学生） We are happy（我们是幸福的） That on the desk is an apple（一个苹果在桌子上）\n第三类句型（主谓宾） #包含主语，谓语（及物动词），宾语\n易混淆的及物动词：reach,resemble,await,marry,attend,mention,discuss,enter\n例句： We will reach BeiJin in two hours（我们将在两小时后抵达北京） Sons resemble their fathers（孩子们长得像他们的父亲） He married her last year（他们在去年结的婚） Students enter the classroom（学生们进入教室）\n第四类句型（主语+谓语+间接宾语+直接宾语） #句型结构包含主语，谓语，间接宾语（人），直接宾语（物）\n作这类句型的谓语的动词称作授予动词，典型的如： give,show,buy,bring,teach,send,lend,make,build,cook,choose,get,order,leave,find\n例句： Someone gave me a piece of cake（有人给了我一片面包） My elder sister shows me some photos（我姐姐给我看了一些照片） My friend bought me a gift（我朋友给我买了一份礼物） She left him a letter（她给他留下了一封信） He asks the teacher a question（他问了老师一个问题）\n第四类句型可以转换为第三类句型，即主谓宾，要注意以下规则：\n动词为give,show,bring,teach,send,lend等，转换时要用 to + 间接宾语\nMy elder sister shows me some photos -\u0026gt; My elder sister shows some photos to me\n动词为make,buy,build,cook,choose,get,order,leave,find等，转换时要用 for + 间接宾语\nShe left him a letter -\u0026gt; She left a letter for him\nask，转换时要用 of + 间接宾语\nHe asks the teacher a question -\u0026gt; He asks a question of the teacher\n第五类句型（主语+谓语+宾语+宾语补语） #句型结构包含主语，谓语，宾语，宾语补语\n对于一般实义动词，宾语补语只能是名词、代词、形容词\n常用于该结构的动词： make,keep,call,think,find,believe,elect\n例句： Playing basketball make us happy（打篮球使我们快乐） We believe him honest（我们相信他是诚实的） Please keep the room clean（请保持房间清洁）\n对于 感官动词 和 使役动词 要接 动词 作为宾语补语，动词原型、现在分词用于主动语态，动词过去分词用于被动语态\n用于主动语态\n感官动词可以接动词原型、动词现在分词，例： I heard her cry/crying（我听见她唱歌） I saw them dance/dancing（我看见他们跳舞）\n使役动词（make、let）接动词原型，例： My teacher makes me study hard（我老师让我刻苦学习） He lets me leave（他让我留下）\n使役动词（have）接动词原型、动词现在分词，例： My mother has me clean/cleaning the room（我妈妈让我清洁房间）\n用于被动语态\n感官动词、使役动词接动词过去分词，例： I heard the window broken（我听见窗户被打碎了） I made my car washed（我洗车了）\nlet 要接 be + 动词过去分词表示被动，例： I let my car be repaired（我修了我的车）\n特殊使役动词get、help\nget 在表主动语态的句型中要用动词不定时作宾语补语，在表被动语态的句型中同样用动词，例： My mom got me to clean my room（我妈让我打扫房间） My mom got my room cleaned by me（被动语态同上）\nhelp 接动词原型和动词不定式表主动，意思相同，没有被动用法，例： Friends helped me complete homework（朋友们帮助我完成作业） Friends helped me to complete homework（同上）\nmake 可以用于多种句型，例如：\nMy mom makes breakfast 我妈做早餐（第三类句型，主谓宾）\nMy mom makes me breakfast 我妈为我做早餐（第四类句型，主谓宾宾）\nMy mom makes breakfast delicious 我妈让早餐美味（第五类句型，主谓宾宾补）\n","date":"2025年8月21日","permalink":"https://yyym2017.github.io/english/syntax/five-sentence-patterns/","section":"英语学习","summary":"","title":"英语语法之五类句型"},{"content":" 单单学语法是没有意义的，因为任何学习的规律都是学以致用，用不上便是三天忘。\n这个系列只是为了整理记录以供后来查阅使用，它们并不是我的知识。 ","date":null,"permalink":"https://yyym2017.github.io/english/syntax/","section":"英语学习","summary":"","title":"语法学习"},{"content":" 我是一个低级码农，对！算不上工程师，目前编码工作仍是我养家糊口的手段。\n计算机科学是门伟大的科学，我抱以半分敬意，半分爱好，半分热情。\n还是希望我能有所成的！\n但是岁月浮沉，年轻不再，潜力在余生的消磨中有如夕阳的余烬，且行且珍惜！ ","date":null,"permalink":"https://yyym2017.github.io/computer/","section":"计算机科学","summary":"","title":"计算机科学"},{"content":" 数学！嗯，这是一个深刻的话题！\n我觉得人类智力的终极体现便是数学，怎么夸奖都不为过。\n数学来不得虚假，不会就是不会。\n我是一个登不了数学大雅之门的业余者，爱好者？恐怕也不敢当。\n只有膜拜和瞻仰，这个领域的大师给人类带来的震撼！ ","date":null,"permalink":"https://yyym2017.github.io/math/","section":"数学学习","summary":"","title":"数学学习"},{"content":" 英语学习，没什么好说的，当前历史条件下，通往世界的大门，特别是对于学术界。\n如果规定我们只能选休三门课程，那么我会毫不犹豫写上 数学、英语、语文。 ","date":null,"permalink":"https://yyym2017.github.io/english/","section":"英语学习","summary":"","title":"英语学习"},{"content":"","date":null,"permalink":"https://yyym2017.github.io/tags/congo/","section":"标签分类","summary":"","title":"Congo"},{"content":"","date":null,"permalink":"https://yyym2017.github.io/tags/hugo/","section":"标签分类","summary":"","title":"Hugo"},{"content":"1. 前置条件 # Go 版本：1.25.0 Hugo 版本：v0.148.2+extended Git 2. 安装 Congo 主题 #假定以上软件都有安装，现在我们开始安装 Congo 主题， 参考官方文档。\n# 创建一个 Hugo 网站项目 hugo new site example # 切换目录到项目根目录 cd example git init # 以 git 子模块的方式拉取主题到项目根目录的 themes 文件夹下， # 并拷贝 themes/config 目录到项目根目录同时删除项目默认的网站配置文件 hugo.toml， # 拷贝完之后编辑 config/_default/hugo.toml 文件，键入 theme=\u0026#34;congo\u0026#34; 启用主题 git submodule add -b stable https://github.com/jpanther/congo.git themes/congo # 创建文档，使用支持 markdown 语法的文本编辑器输入内容保存，推荐使用 VSCode + markdown 插件 hugo new posts/test-paper.md # 预览效果 hugo server -D 完成以上步骤并能正常预览效果，便完成了 Congo 主题的安装及默认配置。\n3. 配置主题 #根据需要对项目根目录下 config/_default 中的配置文件进行调整，参考官方文档。\n4. 配置文档写作模板 #编辑项目根目录下 archetypes/default.md 文件。\n# archetypes/default.md --- title: \u0026#34;\u0026#34; date: {{ .Date }} draft: true description: \u0026#34;\u0026#34; tags: [\u0026#39;\u0026#39;] --- 编辑好之后，以后通过 hugo new xxx-dir/xxx-paper.md 创建文档会自动应用模版内容到文档的 Front Matter 部分， 读者还可以根据单个文档进行调整，字段默认值继承自项目根目录 config/_default/params.toml 中的配置\n5. 写作目录结构划分 #参考官方文档目录结构及分类法。\n6. 集成 utterances 评论模块 #utterances 是 Github 默认支持的评论模块，集成进我们的网站不需要后端支持，参考 utterances 文档｜Congo 文档.\n点击此处安装/配置 utterances 到 你的 Github 账户 在项目根目录创建 layouts/_partials/comments.html 文件，将以下内容粘贴进去， 并修改 repo 属性为你自己的 Github 仓库，可以直接用你存放网页文件的仓库 \u0026lt;!-- layouts/_partials/comments.html --\u0026gt; \u0026lt;script src=\u0026#34;https://utteranc.es/client.js\u0026#34; repo=\u0026#34;username/reponame\u0026#34; issue-term=\u0026#34;pathname\u0026#34; theme=\u0026#34;github-light\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34; label=\u0026#34;comments\u0026#34; async\u0026gt; \u0026lt;/script\u0026gt; 修改项目根目录下 config/_default/params.toml 的 showWordCount 为 true # config/_default/params.toml [article] ... showComments = true ... 配置完后预览，便能在文章底部查看到评论模块，用 Github 账户登录就可以进行评论了\n7. 网站托管 #我们使用 Github pages 对我们生成的网站文件进行托管。\n首先需要在 Github 上创建两个仓库，一个用于存放 Hugo 项目的源文件，也就是通过 hugo new site 生成的目录，设为私有（private）； 一个用于存放 hugo 命令生成的网站静态文件，也就是项目根目录下 public 文件夹内容。仓库名必须满足 username.github.io 的格式，设为公开（public）。\n这样做有两点好处，第一，源文件仓库设为私有可以防止被盗用，那如果是这样为什么不以一个仓库既存放源文件也存放构建的目标文件呢？因为我们的目标文件需要托管到 Github pages， 就必须将文件存放的仓库设为公开，这样一个仓库就做不到即为私有又利用 Github pages 进行托管了；第二，可以做到源文件与目标文件的分离，降低了数据安全的风险。\n基本原理是这样的：配置源文件（私有）仓库的 Github actions 生成目标文件，然后推送到目标文件（公开）仓库，所以要用上 access token。\n通过设置生成一个 token，名字随意，这里叫 PAT。\nSettings -\u0026gt; Developer Settings -\u0026gt; Personal access tokens -\u0026gt; Tokens (classic) -\u0026gt; Generate new token -\u0026gt; Generate new token (classic)。\n生成后记得复制保存，后面要用，只会显示一次哦。\n进入源文件仓库，依次 Settings -\u0026gt; Secrets and variables -\u0026gt; Actions -\u0026gt; New repository secret， 这里给 token 还是命名为 PAT，这个名称要记下，后面也要用。\n项目根目录创建 .github/workflows/deploy.yml 文件，这个文件的作用是用于触发 Github actions，键入以下内容：\n# .github/workflows/deploy.yml name: Deploy Hugo Site # 触发条件：推送到私有仓库的 main 分支时执行 on: push: branches: [ \u0026#34;main\u0026#34; ] jobs: deploy: runs-on: ubuntu-latest steps: # 步骤1：拉取私有仓库的源文件 - name: Checkout source repo uses: actions/checkout@v4 with: submodules: recursive # 拉取主题子模块（若使用 submodule 安装主题） fetch-depth: 0 # 步骤2：安装 Hugo（Extended 版本，支持 Sass 等功能） - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: \u0026#39;latest\u0026#39; # 使用最新版 extended: true # 启用 Extended 版本 # 步骤3：构建静态文件（生成 public 目录） - name: Build run: hugo --minify --gc # --minify 压缩静态资源 # 步骤4：将 public 目录推送到公有仓库（username.github.io） - name: Deploy to public repo uses: peaceiris/actions-gh-pages@v4 with: # 目标仓库：替换为你的公有仓库（username.github.io） external_repository: your-username/your-repository-name # 推送分支：公有仓库的 main 分支（GitHub Pages 通常用 main 或 gh-pages） publish_branch: main # 要推送的内容：Hugo 生成的 public 目录 publish_dir: ./public # 授权令牌：使用私有仓库的 PAT 密钥 personal_token: ${{ secrets.PAT }} # 提交信息（可选，显示为公有仓库的提交记录） commit_message: \u0026#34;Update site: ${{ github.event.head_commit.message }}\u0026#34; 接着配置目标文件仓库 Github pages 托管，选择从分支构建，以上 deploy.yaml 文件已经配置推送分支为 publish_branch: main，这里就用 main 分支，你也可以使用其他分支\n8. 发布网站 #先在项目根目录添加 .gitignore 文件，忽略掉 public 目录的版本变动，这样就不会对目标文件进行提交和推送至远程仓库了。\n# .gitignore public/ .hugo_build.lock 然后将我们本地的 Hugo 源文件做版本提交，并关联 Github 的源文件仓库。\ngit add . git commit -m \u0026#39;commit message\u0026#39; # 统一分支名称 master -\u0026gt; main git branch -m main # 关联远程仓库 git remote add origin git@github.com:username/repository-name # 绑定远程仓库分支 git push --set-upstream origin main 做完这一步，等上一小会，你便能通过 https://username.github.io 访问到你的静态网站了。\n如果许久都没能访问到网站，可以进入源文件仓库查看 Actions 实例的执行情况，看是否是执行失败了，点击实例可以查看执行日志。\n9. 总结 #完成以上工作，你的个人站点便初步搭建好了。\n这篇文章主要是为了记录我个人的网站搭建过程， 留作以后参考用，所以很多细节结合我个人的主观经历省略了，如果读者朋友需要我补充或者不解的地方，欢迎评论区留言。\n以上所有实操都在我的 MacBook Pro 2015（Intel 处理器） 上测试通过，符合前置要求中的软件版本，Windows 电脑理论上也适用\n","date":"2025年8月20日","permalink":"https://yyym2017.github.io/sketch/personal-web-site-buiding/","section":"随笔记录","summary":"","title":"Hugo + Congo 搭建个人站点记录"},{"content":"","date":null,"permalink":"https://yyym2017.github.io/tags/site/","section":"标签分类","summary":"","title":"Site"},{"content":"","date":null,"permalink":"https://yyym2017.github.io/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/","section":"标签分类","summary":"","title":"个人博客"},{"content":" 所谓随笔，就是随性而为，率性下笔，快速记录一些所得 ","date":null,"permalink":"https://yyym2017.github.io/sketch/","section":"随笔记录","summary":"","title":"随笔记录"}]